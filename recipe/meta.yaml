{% set version = "3.0.4" %}
{% set cuda_major = (cuda_compiler_version|default("12.0.0")).split(".")[0] %}
{% set platform = "x86_64" %}  # [linux64]
{% set platform = "SBSA" %}  # [aarch64]
{% set platform = "windows" %}  # [win]
{% set extension = "tgz" %}  # [not win]
{% set extension = "zip" %}  # [win]

package:
  name: nvcomp
  version: {{ version }}

source:
  - url: https://developer.download.nvidia.com/compute/nvcomp/{{ version }}/local_installers/nvcomp_{{ version }}_{{ platform }}_{{ cuda_major }}.x.{{ extension }}
    sha256: 29bec18a1cf5fd92c705f3c3a662d2279a8a609e465ef44e305b28cbcfc25349  # [linux64 and (cuda_compiler_version or "None").startswith("11")]
    sha256: 2e0ba6996b8fb28ac085567c67b4882fcb81c23b62763fc0547641f63f317199  # [linux64 and (cuda_compiler_version or "None").startswith("12")]
    sha256: 18d0a5104fdf5cd61074d10e1ada4efe9242c22b871d4bc6dde6e5a6e5b5db29  # [aarch64 and (cuda_compiler_version or "None").startswith("11")]
    sha256: b9066906ca6bc7f7210301d7e515065f6e1c44461748e28bbaeacd48b481e6f4  # [aarch64 and (cuda_compiler_version or "None").startswith("12")]
    sha256: b85a3ed6b4c7cfc376db1ad4894be5e74d178f50ab4b0803c5c0f20774fe7390  # [win and (cuda_compiler_version or "None").startswith("11")]
    sha256: 39f5cae0b3237c7f08266f776dbba051a18576162e6491c507ed771bebdfe359  # [win and (cuda_compiler_version or "None").startswith("12")]
  # Include cudart license because it is statically linked.
  - url: https://developer.download.nvidia.com/compute/cuda/redist/cuda_cudart/LICENSE.txt
    fn: cudart_LICENSE.txt
    sha256: 5db25d4fd138013b563f9a3d1d87f7de7df1dac014fd4cccdfbb3435a5cff761

build:
  number: 1
  skip: True  # [osx or ppc64le or not ((cuda_compiler_version or "None").startswith("11") or (cuda_compiler_version or "None").startswith("12"))]
  script:
    - mv -v $SRC_DIR/LICENSE $SRC_DIR/LICENSE.txt  # [linux]
    - mkdir -pv $PREFIX/include                    # [linux]
    - mv -v include/* $PREFIX/include              # [linux]
    - mkdir -pv $PREFIX/lib                        # [linux]
    - mv -v lib/* $PREFIX/lib/                     # [linux]
    - mkdir %LIBRARY_INC%                                   # [win]
    - copy %SRC_DIR%\\include\\* %LIBRARY_INC%\\            # [win]
    - mkdir %LIBRARY_LIB%                                   # [win]
    - copy %SRC_DIR%\\lib\\nvcomp*.lib %LIBRARY_LIB%\\      # [win]
    - mkdir %LIBRARY_BIN%                                   # [win]
    - copy %SRC_DIR%\\lib\\nvcomp*.dll %LIBRARY_BIN%\\      # [win]
  ignore_run_exports_from:
    - {{ compiler('cuda') }}
  run_exports:
    - {{ pin_subpackage("nvcomp") }}

requirements:
  build:
    - {{ compiler('c') }}
    - {{ compiler('cxx') }}
    - {{ compiler('cuda') }}
    - arm-variant * {{ arm_variant_type }}  # [aarch64]
    - sysroot_{{ target_platform }} 2.17  # [linux]
  host:
    - cuda-version {{ cuda_major }}
  run:
    - {{ pin_compatible("cuda-version", min_pin="x", max_pin="x") }}
  run_constrained:
    - arm-variant * {{ arm_variant_type }}  # [aarch64]

test:
  requires:
    - {{ compiler('c') }}  # [linux]
  files:
    - test_load_elf.c      # [linux]
  commands:
    - test -f $PREFIX/include/nvcomp.h                                 # [linux]
    - test -f $PREFIX/include/nvcomp.hpp                               # [linux]
    - test -f $PREFIX/lib/libnvcomp.so                                 # [linux]
    - test -f $PREFIX/lib/libnvcomp_bitcomp.so                         # [linux]
    - test -f $PREFIX/lib/libnvcomp_gdeflate.so                        # [linux]
    - test -f $PREFIX/lib/libnvcomp_gdeflate_cpu.so                    # [linux]
    - ${GCC} test_load_elf.c -std=c99 -Werror -ldl -o test_load_elf    # [linux]
    - for f in $PREFIX/lib/libnvcomp*.so; do ./test_load_elf $f; done  # [linux]
    - if not exist %LIBRARY_INC%/nvcomp.h exit 1                       # [win]
    - if not exist %LIBRARY_INC%/nvcomp.hpp exit 1                     # [win]
    - if not exist %LIBRARY_LIB%/nvcomp.lib exit 1                     # [win]
    - if not exist %LIBRARY_LIB%/nvcomp_bitcomp.lib exit 1             # [win]
    - if not exist %LIBRARY_LIB%/nvcomp_gdeflate.lib exit 1            # [win]
    - if not exist %LIBRARY_BIN%/nvcomp.dll exit 1                     # [win]
    - if not exist %LIBRARY_BIN%/nvcomp_bitcomp.dll exit 1             # [win]
    - if not exist %LIBRARY_BIN%/nvcomp_gdeflate.dll exit 1            # [win]

about:
  home: https://developer.nvidia.com/nvcomp
  license:
    LicenseRef-nvCOMP-Software-License-Agreement AND LicenseRef-NVIDIA-End-User-License-Agreement
  license_file:
    - LICENSE.txt
    - cudart_LICENSE.txt
  license_url: https://developer.download.nvidia.com/compute/nvcomp/2.3/LICENSE.txt
  summary: "High Speed Data Compression Using NVIDIA GPUs"
  description: |
    The nvCOMP library provides fast lossless data compression and
    decompression using a GPU. It features generic compression interfaces to
    enable developers to use high-performance GPU compressors in their
    applications.

    License Agreements:- The packages are governed by the standard NVIDIA
    Software License Agreement (EULA). By downloading and using the packages,
    you accept the terms and conditions of the NVIDIA nvCOMP EULA -
    https://developer.download.nvidia.com/compute/nvcomp/2.3/LICENSE.txt
  doc_url: https://github.com/NVIDIA/nvcomp/blob/main/README.md
  dev_url: https://developer.nvidia.com/nvcomp

extra:
  recipe-maintainers:
    - adibbley
    - bdice
    - jakirkham
