{% set version = "4.1.1.1" %}
{% set cuda_major = (cuda_compiler_version|default("12.0.0")).split(".")[0] %}
{% set platform = "linux-x86_64" %}  # [linux64]
{% set platform = "linux-sbsa" %}  # [aarch64]
{% set platform = "windows-x86_64" %}  # [win]
{% set extension = "tar.xz" %}  # [not win]
{% set extension = "zip" %}  # [win]

package:
  name: nvcomp
  version: {{ version }}

source:
  - url: https://developer.download.nvidia.com/compute/nvcomp/redist/nvcomp/{{ platform }}/nvcomp-{{ platform }}-{{ version }}_cuda{{ cuda_major }}-archive.{{ extension }}  # [linux64 or aarch64 or win]
    sha256: c22a3acfe2712f6281341998d4b3a6d0ce1e1325ac90e4b0b080bf21f5817171  # [linux64 and (cuda_compiler_version or "None").startswith("11")]
    sha256: 78874c19621d9e6142c2694e0fc0e01ea049538b8ef5606bd59d40225510ba1d  # [linux64 and (cuda_compiler_version or "None").startswith("12")]
    sha256: f68a4044a4510969b7689dc881235cae2ebf90cae16317b984c175f702c56b3f  # [aarch64 and (cuda_compiler_version or "None").startswith("11")]
    sha256: 9e986644b5e846cd1820d5aa53efe5bd4e8cb0c65229902344d436cecaf0c205  # [aarch64 and (cuda_compiler_version or "None").startswith("12")]
    sha256: f959b0794b644dac5642675dff70e7ccd6528fffb79376a9a895a64b02f5b03e  # [win and (cuda_compiler_version or "None").startswith("11")]
    sha256: f272e111f329e6fbef0cd573701e953fbb589e41cd1d02991150be6e7de1f38a  # [win and (cuda_compiler_version or "None").startswith("12")]
  # Include cudart license because it is statically linked.
  - url: https://developer.download.nvidia.com/compute/cuda/redist/cuda_cudart/LICENSE.txt
    fn: cudart_LICENSE.txt
    sha256: e2c71babfd18a8e69542dd7e9ca018f9caa438094001a58e6bc4d8c999bf0d07

build:
  number: 0
  skip: True  # [osx or ppc64le or not ((cuda_compiler_version or "None") == "11.8" or (cuda_compiler_version or "None").startswith("12"))]
  script:
    - mkdir -pv $PREFIX/include                    # [linux]
    - mv -v include/* $PREFIX/include              # [linux]
    - mkdir -pv $PREFIX/lib                        # [linux]
    - mv -v lib/* $PREFIX/lib/                     # [linux]
    - mkdir %LIBRARY_INC%                                   # [win]
    - copy %SRC_DIR%\\include\\* %LIBRARY_INC%\\            # [win]
    - mkdir %LIBRARY_LIB%                                   # [win]
    - copy %SRC_DIR%\\lib\\nvcomp*.lib %LIBRARY_LIB%\\      # [win]
    - mkdir %LIBRARY_BIN%                                   # [win]
    - copy %SRC_DIR%\\bin\\nvcomp*.dll %LIBRARY_BIN%\\      # [win]
  ignore_run_exports_from:
    - {{ compiler('cuda') }}
  run_exports:
    - {{ pin_subpackage("nvcomp") }}

requirements:
  build:
    - {{ compiler('c') }}
    - {{ compiler('cxx') }}
    - {{ compiler('cuda') }}
    - {{ stdlib('c') }}
    - arm-variant * {{ arm_variant_type }}  # [aarch64]
  host:
    - cuda-version {{ cuda_major }}
  run:
    - {{ pin_compatible("cuda-version", min_pin="x", max_pin="x") }}
  run_constrained:
    - arm-variant * {{ arm_variant_type }}  # [aarch64]

test:
  requires:
    - {{ compiler('c') }}  # [linux]
  files:
    - test_load_elf.c      # [linux]
  commands:
    - test -f $PREFIX/include/nvcomp.h                                 # [linux]
    - test -f $PREFIX/include/nvcomp.hpp                               # [linux]
    - test -f $PREFIX/lib/libnvcomp.so                                 # [linux]
    - test -f $PREFIX/lib/libnvcomp_cpu.so                             # [linux]
    - ${GCC} test_load_elf.c -std=c99 -Werror -ldl -o test_load_elf    # [linux]
    - for f in $PREFIX/lib/libnvcomp*.so; do ./test_load_elf $f; done  # [linux]
    - if not exist %LIBRARY_INC%/nvcomp.h exit 1                       # [win]
    - if not exist %LIBRARY_INC%/nvcomp.hpp exit 1                     # [win]
    - if not exist %LIBRARY_LIB%/nvcomp.lib exit 1                     # [win]
    - if not exist %LIBRARY_LIB%/nvcomp_cpu.lib exit 1                 # [win]
    - if not exist %LIBRARY_BIN%/nvcomp.dll exit 1                     # [win]
    - if not exist %LIBRARY_BIN%/nvcomp_cpu.dll exit 1                 # [win]

about:
  home: https://developer.nvidia.com/nvcomp
  license:
    LicenseRef-nvCOMP-Software-License-Agreement AND LicenseRef-NVIDIA-End-User-License-Agreement
  license_file:
    - LICENSE
    - cudart_LICENSE.txt
  license_url: https://developer.download.nvidia.com/compute/nvcomp/2.3/LICENSE.txt
  summary: "High Speed Data Compression Using NVIDIA GPUs"
  description: |
    The nvCOMP library provides fast lossless data compression and
    decompression using a GPU. It features generic compression interfaces to
    enable developers to use high-performance GPU compressors in their
    applications.

    License Agreements:- The packages are governed by the standard NVIDIA
    Software License Agreement (EULA). By downloading and using the packages,
    you accept the terms and conditions of the NVIDIA nvCOMP EULA -
    https://developer.download.nvidia.com/compute/nvcomp/2.3/LICENSE.txt
  doc_url: https://docs.nvidia.com/cuda/nvcomp/index.html
  dev_url: https://developer.nvidia.com/nvcomp

extra:
  recipe-maintainers:
    - conda-forge/cuda
